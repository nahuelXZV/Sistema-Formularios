@using WebClient.Common
@using WebClient.Components
@using WebClient.Components.Forms.Gestion
@using WebClient.Models.Forms
@model GestionViewModel

@{
	ViewData["Title"] = "Gestion";
	ViewData["Module"] = "Formulario";
	ViewData["Action"] = "Crear";
	ViewData["Url"] = Url.Action("Listado", "Gestion");

	var componentName = nameof(GestionCreateComponent);
	var componentParameters = new Dictionary<string, object>
	{
		{ nameof(GestionCreateComponent.Gestion), Model.Gestion  },
	};
}
<script>
	class @componentName {
		componentInstance;
		guardarButton;

		constructor(componentInstance) {
			this.componentInstance = componentInstance;
			this.guardarButton = document.getElementById('btn-save');

			this.guardarButton.addEventListener('click', ev => this.guardar());
		}

		async guardar() {
			await this.componentInstance.invokeMethodAsync('Guardar');
		}

		static init(componentInstance) {
			window.@componentName = new @(componentName)(componentInstance);
		}
	}

	window.@componentName = @componentName;
</script>

@section ContentHeader {
	<div class="inline-flex rounded-md shadow-xs" role="group">
		<a href="@Url.Action("Listado","Gestion")" class="inline-flex items-center px-3 py-1 mr-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700">
			<i class="fa fa-reply mr-1"></i>
			Volver
		</a>
		<button id="btn-save" type="button" class="inline-flex items-center px-3 py-1 mr-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700">
			<i class="fa fa-save mr-1"></i>
			Guardar
		</button>
	</div>
}

<component type="typeof(MainComponent)"
		   param-ComponentTypeName="typeof(GestionCreateComponent).FullName"
		   param-Parameters="@componentParameters"
		   render-mode="ServerPrerendered" />

