@using WebClient.Common
@using WebClient.Common
@using WebClient.Models
@using WebClient.Models.Segurity
@model PerfilViewModel

@{
	ViewData["Title"] = "Perfil";
	ViewData["Module"] = "Perfil";
	ViewData["Action"] = "Listado";
	ViewData["Url"] = Url.Action("Listado", "Perfil");

	Model.ListaItemsMenu = new List<ItemMenu>
	{
		new ItemMenu { Id = MenuItemId.Editar, Text = "Editar", IconCss = "fa fa-pencil", Url = Url.Action("Crear", "Perfil"), ActionType = MenuItemActionType.POST },
		new ItemMenu { Id = MenuItemId.Eliminar, Text = "Eliminar", IconCss = "fa fa-trash", Url = Url.Action("Eliminar", "Perfil"), ActionType = MenuItemActionType.POST, Confirm = true, ConfirmMessage = "Esta seguro de eliminar este perfil?" },
	};
}

@section ContentHeader {
	<div class="inline-flex rounded-md shadow-xs" role="group">
		<form id="FormCrear" action="/Perfil/Crear" method="post">@Html.AntiForgeryToken()</form>
		<button form="FormCrear" type="submit" class="inline-flex items-center px-3 py-1 mr-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700">
			<i class="fa fa-plus mr-1"></i>
			Crear
		</button>
	</div>
}

<div class="rounded-2xl border border-gray-200 bg-white px-3 py-3">
	<div id="table-wrapper" class=""></div>
</div>

@section Scripts {
	<script>
		new gridjs.Grid({
			columns: ['Id', 'Nombre', "Descripcion",
				{
					name: 'Acciones',
					formatter: (cell, row) => gridjs.html(this.menuTableHandler(row._cells[0].data))
				}
			],
			server: {
			  url: urlWeb + "Perfil/GetAll",
			  then: data => data.data.map(data => [
				data.id, data.nombre, data.descripcion
			  ]),
			  total: data => data.total
			},
			...this.optionsTable
		}).render(document.getElementById("table-wrapper"));
	</script>
}
